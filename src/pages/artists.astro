---
import '../styles/global.css';

interface Artist {
	id: number;
	name: string;
	surname: string;
	about: string;
	contactInformation: {
		email: string;
		phoneNumber: string;
		address: {
			street: string;
			number: string;
			city: string;
			postalCode: string;
			country: string;
		};
	};
}

const response = await fetch('https://api.xpose.es/artists');
const artists: Artist[] = await response.json();


interface WebSiteSettings {
	id: number;
	name: string;
	websiteName: string;
	favIconUrl: string;
	contactInformation: {
		email: string;
		phoneNumber: string;
		address: {
			street: string;
			number: string;
			city: string;
			postalCode: string;
			country: string;
		};
	};
}

const settingsResponse = await fetch('http://api.xpose.es/website-settings/contact');
const websiteSettings: WebSiteSettings = await settingsResponse.json();

---

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/x-icon" href={websiteSettings.favIconUrl} />
		<title>Artists - {websiteSettings.name}</title>
	</head>
	<body class="bg-white">
		<!-- Header -->
		<header class="fixed top-0 left-0 right-0 z-50">
			<nav class="max-w-7xl mx-auto px-6 py-8">
				<div class="flex justify-between items-center">
					<a href="/" class="text-black text-xl tracking-wide dark:text-white">{websiteSettings.name}</a>
					<div class="space-x-8">
						<a href="/collections" class="text-black hover:opacity-70 transition-opacity tracking-wide">Collections</a>
						<a href="/artists" class="text-black hover:opacity-70 transition-opacity tracking-wide">Authors</a>
						<a href="/contact" class="text-black hover:opacity-70 transition-opacity tracking-wide">Contact</a>
					</div>
				</div>
			</nav>
		</header>

		<!-- Main Content -->
		<main class="min-h-screen flex dark:bg-gray-900">
			<!-- Artists List -->
            <div class="w-1/2 p-8 pt-32 flex flex-col items-end text-right">
                
    
                <div class="space-y-24 w-1/2 mb-24 bg-white dark:bg-gray-900" style="margin-left: 35%; z-index: 100;">
                   <h1 class="title-font text-4xl mb-12 w-fit dark:text-white">Our Authors</h1>
                  {artists.map((artist) => (
                    <div class="artist-card group text-right" data-artist-id={artist.id}>
                      <div class="mb-6">
                        <h2 class="text-3xl font-light tracking-wide mb-4 dark:text-white">
                          {artist.name} {artist.surname}
                        </h2>
                        <p class="text-gray-600 dark:text-gray-300 leading-relaxed">{artist.about}</p>
                      </div>
                      <div class="space-y-2 text-sm text-gray-500 dark:text-gray-400">
                        <p>{artist.contactInformation.email}</p>
                        <p>{artist.contactInformation.phoneNumber}</p>
                        <p>{artist.contactInformation.address.street} {artist.contactInformation.address.number}, {artist.contactInformation.address.city}, {artist.contactInformation.address.postalCode}, {artist.contactInformation.address.country}</p>
                      </div>
                    </div>
                  ))}
                </div>
            </div>
              
              
              
              

			<!-- Artist Image -->
			<div class="w-1/2 fixed right-0 top-0 h-screen">
				<div class="h-full w-full">
					<img 
						id="artistImage"
						src='/src/assets/artists.jpg'
						alt="Artist Portrait"
						class="w-full h-full object-cover transition-opacity duration-500"
					/>
				</div>
			</div>
		</main>

		<script is:inline>
			document.addEventListener('DOMContentLoaded', () => {
				const artistCards = document.querySelectorAll('.artist-card');
				const artistImage = document.getElementById('artistImage');
				const artistsData = JSON.stringify(artists);

				artistCards.forEach(card => {
					card.addEventListener('mouseenter', () => {
						const artistId = card.getAttribute('data-artist-id');
						const artist = artistsData.find(a => a.id === parseInt(artistId));
						if (artist && artistImage) {
							artistImage.style.opacity = '0';
							setTimeout(() => {
								artistImage.src = artist.image;
								artistImage.style.opacity = '1';
							}, 300);
						}
					});
				});
			});
		</script>
	</body>
</html> 